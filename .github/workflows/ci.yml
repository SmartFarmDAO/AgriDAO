name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install black isort ruff mypy pytest pytest-cov
      - name: Lint (ruff)
        run: ruff check .
      - name: Format check (black)
        run: black --check .
      - name: Import sort check (isort)
        run: isort --check-only .
      - name: Type check (mypy)
        run: mypy --ignore-missing-imports app || true
      - name: Check migrations
        run: |
          # Validate migrations can be applied to an empty SQLite test DB
          export DATABASE_URL="sqlite:///test_migrations.db"
          alembic upgrade head
      - name: Run tests
        run: pytest -q
      - name: Build Docker image
        run: |
          cd ..
          docker build -t agridao-backend:${{ github.sha }} backend/
          docker tag agridao-backend:${{ github.sha }} agridao-backend:latest
          # Optionally push to registry here:
          # docker push agridao-backend:${{ github.sha }}

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint
      - name: Typecheck
        run: npm run typecheck
      - name: Test
        run: npm run test:ci
      - name: Build
        run: npm run build

  mobile:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: mobile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json
      - name: Install deps
        run: npm ci
      - name: Lint
        run: npm run lint || true
      - name: Typecheck
        run: npm run typecheck
      - name: Test
        run: npm test -- --ci --watchAll=false || true